{"version":3,"sources":["js/player.js","js/assets.js","js/game.js","js/app.js"],"names":["Player","playerId","id","name","avatar","weapon","health","location","row","column","damage","image","old","Game","players","reset","document","querySelector","classList","remove","i","placeObject","obstacle","map","player","weapon1","weapon2","currentPlayer","Math","floor","random","length","detectTurn","protection","innerHTML","item","type","randomTile","tiles","dataset","contains","detectPlayer","r","c","p1c","p1r","yDistance","abs","xDistance","y","x","console","log","r1","r2","r3","r4","c1","c2","c3","c4","r1c1","r2c2","r3c3","r4c4","detectObstacle","add","querySelectorAll","showPlayerMoves","e","oldPos","newPos","target","nodeName","path","play","tile","removeEventListener","movePlayer","detectFight","retaliation","changeTurn","Number","north","south","east","west","attacker","opponent","fightModal","setTimeout","attack","protect","run","gameOver","addEventListener","once","playerNorthMoves","playerEastMoves","playerSouthMoves","playerWestMoves","output","createBoard","newGame","playerOne","player1","weapon3","generate","playerTwo","player2","weapon4","new","rulesBtn","rulesClose"],"mappings":"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","file":"app.6345d8c4.js","sourceRoot":"..","sourcesContent":["let playerId = 1;\r\n\r\nclass Player {\r\n  constructor(id, name, avatar, weapon) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.avatar = avatar;\r\n    this.weapon = weapon;\r\n  }\r\n\r\n  generate = () => {\r\n    return {\r\n      id: this.id,\r\n      name: this.name,\r\n      avatar: `<img src=\"${this.avatar}\" />`,\r\n      health: 100,\r\n      location: { row: 0, column: 0 },\r\n      weapon: {\r\n        damage: 10,\r\n        image: `<img src=\"${this.weapon}\" data-damage=\"10\" />`,\r\n        old: null,\r\n      },\r\n    };\r\n  };\r\n}\r\n\r\nexport default Player;\r\n","import player1 from \"../images/player-1.png\";\r\nimport player2 from \"../images/player-2.png\";\r\nimport weapon1 from \"../images/weapon-1.png\";\r\nimport weapon2 from \"../images/weapon-2.png\";\r\nimport weapon3 from \"../images/weapon-3.png\";\r\nimport weapon4 from \"../images/weapon-4.png\";\r\nimport obstacle from \"../images/obstacle.png\";\r\n\r\nexport { player1, player2, weapon1, weapon2, weapon3, weapon4, obstacle };\r\n","import { weapon1, weapon2, obstacle } from \"./assets\";\r\n\r\nclass Game {\r\n  constructor(players) {\r\n    this.players = players;\r\n    this.tiles = document.querySelectorAll(\".board > div\");\r\n    this.currentPlayer = null;\r\n  }\r\n\r\n  static createBoard = () => {\r\n    let column = 0;\r\n    let row = 1;\r\n\r\n    let output = \"\";\r\n\r\n    for (let i = 0; i < 81; i++) {\r\n      column++;\r\n      output += `<div id=\"tile-${\r\n        i + 1\r\n      }\"  data-row=\"${row}\"  data-column=\"${column}\"></div>`;\r\n\r\n      if (column === 9) {\r\n        column = 0;\r\n        row++;\r\n      }\r\n    }\r\n\r\n    document.querySelector(\".board\").innerHTML = output;\r\n  };\r\n\r\n  //Creating New Game\r\n\r\n  new = () => {\r\n    this.reset();\r\n\r\n    document.querySelector(\"#gameover-modal\").classList.remove(\"open\");\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n      this.placeObject(`<img src=\"${obstacle}\" />`, \"obstacle\");\r\n    }\r\n\r\n    this.players.map((player) => {\r\n      this.placeObject(player, \"player\");\r\n    });\r\n\r\n    this.placeObject(`<img src=\"${weapon1}\" data-damage=\"20\" />`, \"weapon\");\r\n    this.placeObject(`<img src=\"${weapon2}\" data-damage=\"30\"  />`, \"weapon\");\r\n\r\n    this.currentPlayer = this.players[\r\n      Math.floor(Math.random() * this.players.length)\r\n    ];\r\n\r\n    this.detectTurn();\r\n  };\r\n\r\n  //Reset Game\r\n\r\n  reset = () => {\r\n    // for (const tile of this.tiles) {\r\n    //   tile.innerHTML = \"\";\r\n    //   tile.removeAttribute(\"class\");\r\n    // }\r\n\r\n    this.players.map((player) => {\r\n      const protection = document.querySelector(`#protection-p${player.id}`);\r\n\r\n      protection.innerHTML = \"UNPROTECTED\";\r\n      protection.classList.remove(\"protecting\");\r\n\r\n      document.querySelector(`#panel-p${player.id} h2`).innerHTML = player.name;\r\n      document.querySelector(`#health-p${player.id}`).innerHTML = player.health;\r\n      document.querySelector(`#damage-p${player.id}`).innerHTML =\r\n        player.weapon.damage;\r\n      document.querySelector(`#weapon-p${player.id}`).innerHTML =\r\n        player.weapon.image;\r\n    });\r\n  };\r\n\r\n  //Place Players and Weapons on Tiles\r\n\r\n  placeObject = (item, type) => {\r\n    const randomTile = Math.floor(Math.random() * this.tiles.length);\r\n    const { row, column } = this.tiles[randomTile].dataset;\r\n\r\n    const detectObstacle = (row, column) => {\r\n      const r1 = document.querySelector(\r\n        `[data-row=\"${row - 1}\"][data-column=\"${column}\"]`\r\n      );\r\n      const r2 = document.querySelector(\r\n        `[data-row=\"${row - 2}\"][data-column=\"${column}\"]`\r\n      );\r\n      const r3 = document.querySelector(\r\n        `[data-row=\"${row + 1}\"][data-column=\"${column}\"]`\r\n      );\r\n      const r4 = document.querySelector(\r\n        `[data-row=\"${row + 2}\"][data-column=\"${column}\"]`\r\n      );\r\n\r\n      const c1 = document.querySelector(\r\n        `[data-column=\"${column - 1}\"][data-row=\"${row}\"]`\r\n      );\r\n      const c2 = document.querySelector(\r\n        `[data-column=\"${column - 2}\"][data-row=\"${row}\"]`\r\n      );\r\n      const c3 = document.querySelector(\r\n        `[data-column=\"${column + 1}\"][data-row=\"${row}\"]`\r\n      );\r\n      const c4 = document.querySelector(\r\n        `[data-column=\"${column + 2}\"][data-row=\"${row}\"]`\r\n      );\r\n\r\n      if (r1 && r1.classList.contains(\"obstacle\")) return true;\r\n      if (r2 && r2.classList.contains(\"obstacle\")) return true;\r\n      if (r3 && r3.classList.contains(\"obstacle\")) return true;\r\n      if (r4 && r4.classList.contains(\"obstacle\")) return true;\r\n\r\n      if (c1 && c1.classList.contains(\"obstacle\")) return true;\r\n      if (c2 && c2.classList.contains(\"obstacle\")) return true;\r\n      if (c3 && c3.classList.contains(\"obstacle\")) return true;\r\n      if (c4 && c4.classList.contains(\"obstacle\")) return true;\r\n\r\n      const r1c1 = document.querySelector(\r\n        `[data-row=\"${row + 1}\"][data-column=\"${column + 1}\"]`\r\n      );\r\n\r\n      const r2c2 = document.querySelector(\r\n        `[data-row=\"${row - 1}\"][data-column=\"${column - 1}\"]`\r\n      );\r\n\r\n      const r3c3 = document.querySelector(\r\n        `[data-row=\"${row - 1}\"][data-column=\"${column + 1}\"]`\r\n      );\r\n\r\n      const r4c4 = document.querySelector(\r\n        `[data-row=\"${row + 1}\"][data-column=\"${column - 1}\"]`\r\n      );\r\n\r\n      if (r1c1 && r1c1.classList.contains(\"obstacle\")) return true;\r\n      if (r2c2 && r2c2.classList.contains(\"obstacle\")) return true;\r\n      if (r3c3 && r3c3.classList.contains(\"obstacle\")) return true;\r\n      if (r4c4 && r4c4.classList.contains(\"obstacle\")) return true;\r\n    };\r\n\r\n    const detectPlayer = (r, c) => {\r\n      if (this.players[0].location.row > 0) {\r\n        const p1c = +this.players[0].location.column;\r\n        const p1r = +this.players[0].location.row;\r\n\r\n        const yDistance = Math.abs(p1r - row);\r\n        const xDistance = Math.abs(p1c - column);\r\n\r\n        // Check if P1 is in same column and less than 4 steps away from P2\r\n        if (p1c === column && yDistance <= 4) {\r\n          // Check if there's a barrier between two players\r\n          for (let i = 1; i <= yDistance; i++) {\r\n            if (p1r > row) {\r\n              const y = document.querySelector(\r\n                `[data-row=\"${p1r - i}\"][data-column=\"${p1c}\"]`\r\n              );\r\n              if (y && y.classList.contains(\"obstacle\")) return false;\r\n            } else {\r\n              const y = document.querySelector(\r\n                `[data-row=\"${p1r + i}\"][data-column=\"${p1c}\"]`\r\n              );\r\n              if (y && y.classList.contains(\"obstacle\")) return false;\r\n            }\r\n          }\r\n\r\n          return true;\r\n        }\r\n\r\n        // Check if P1 is in same row and less than 4 steps away from P2\r\n        if (p1r === row && xDistance <= 4) {\r\n          // Check if there's a obstacle between two players\r\n          for (let i = 1; i <= xDistance; i++) {\r\n            if (p1c > column) {\r\n              const x = document.querySelector(\r\n                `[data-row=\"${p1r}\"][data-column=\"${p1c - i}\"]`\r\n              );\r\n              if (x && x.classList.contains(\"obstacle\")) return false;\r\n            } else {\r\n              const x = document.querySelector(\r\n                `[data-row=\"${p1r}\"][data-column=\"${p1c + i}\"]`\r\n              );\r\n              if (x && x.classList.contains(\"obstacle\")) return false;\r\n            }\r\n          }\r\n\r\n          return true;\r\n        }\r\n\r\n        if (\r\n          (xDistance === 1 && yDistance <= 4) ||\r\n          (yDistance === 1 && xDistance <= 4)\r\n        )\r\n          return true;\r\n      }\r\n    };\r\n\r\n    if (this.tiles[randomTile].classList.contains(\"occupied\"))\r\n      return this.placeObject(item, type);\r\n\r\n    if (type === \"player\") {\r\n      if (detectPlayer(+row, +column)) {\r\n        console.log(\"detected player...\");\r\n        return this.placeObject(item, type);\r\n      }\r\n\r\n      this.players[item.id - 1].location = { row, column };\r\n\r\n      this.tiles[randomTile].innerHTML = item.avatar;\r\n    } else {\r\n      if (type === \"obstacle\" && detectObstacle(+row, +column)) {\r\n        console.log(\"detected obstacle...\");\r\n        return this.placeObject(item, type);\r\n      }\r\n      this.tiles[randomTile].innerHTML = item;\r\n    }\r\n    this.tiles[randomTile].classList.add(type);\r\n    this.tiles[randomTile].classList.add(\"occupied\");\r\n  };\r\n\r\n  //Detect Player Turn\r\n\r\n  detectTurn = () => {\r\n    for (const panel of document.querySelectorAll(\".panel\")) {\r\n      panel.classList.remove(\"current\");\r\n    }\r\n\r\n    document\r\n      .querySelector(`#panel-p${this.currentPlayer.id}`)\r\n      .classList.add(\"current\");\r\n\r\n    this.showPlayerMoves();\r\n  };\r\n\r\n  //Change Player Turn\r\n\r\n  changeTurn = () => {\r\n    if (this.currentPlayer.id === 1) {\r\n      this.currentPlayer = this.players[1];\r\n    } else {\r\n      this.currentPlayer = this.players[0];\r\n    }\r\n\r\n    this.detectTurn();\r\n  };\r\n\r\n  // Player Moves\r\n\r\n  movePlayer = (e) => {\r\n    const oldPos = document.querySelector(\r\n      `[data-row=\"${this.currentPlayer.location.row}\"][data-column=\"${this.currentPlayer.location.column}\"]`\r\n    );\r\n\r\n    const newPos = e.target.nodeName === \"IMG\" ? e.path[1] : e.target;\r\n\r\n    if (this.currentPlayer.weapon.old) {\r\n      oldPos.innerHTML = this.currentPlayer.weapon.old;\r\n      oldPos.classList.add(\"weapon\");\r\n      oldPos.classList.remove(\"player\");\r\n      this.players[this.currentPlayer.id - 1].weapon.old = null;\r\n    } else {\r\n      oldPos.innerHTML = \"\";\r\n      oldPos.classList = \"\";\r\n    }\r\n\r\n    if (newPos.classList.contains(\"weapon\")) {\r\n      this.players[\r\n        this.currentPlayer.id - 1\r\n      ].weapon.old = this.currentPlayer.weapon.image;\r\n\r\n      this.players[this.currentPlayer.id - 1].weapon.image = newPos.innerHTML;\r\n\r\n      this.players[this.currentPlayer.id - 1].weapon.damage =\r\n        e.target.dataset.damage;\r\n\r\n      document.querySelector(`#weapon-p${this.currentPlayer.id}`).innerHTML =\r\n        newPos.innerHTML;\r\n\r\n      document.querySelector(`#damage-p${this.currentPlayer.id}`).innerHTML =\r\n        e.target.dataset.damage;\r\n\r\n      let weaponSound = document.querySelector(\"#weapon-sound\");\r\n      weaponSound.play();\r\n    }\r\n\r\n    newPos.innerHTML = this.currentPlayer.avatar;\r\n    newPos.classList.add(\"player\", \"occupied\");\r\n\r\n    this.players[this.currentPlayer.id - 1].location = {\r\n      row: newPos.dataset.row,\r\n      column: newPos.dataset.column,\r\n    };\r\n\r\n    for (const tile of document.querySelectorAll(\".highlight\")) {\r\n      tile.classList.remove(\"highlight\");\r\n      tile.removeEventListener(\"click\", this.movePlayer);\r\n    }\r\n\r\n    if (this.detectFight()) {\r\n      this.retaliation();\r\n    } else {\r\n      this.changeTurn();\r\n    }\r\n  };\r\n\r\n  // Detect Fight\r\n\r\n  detectFight = () => {\r\n    const row = Number(this.currentPlayer.location.row);\r\n    const column = Number(this.currentPlayer.location.column);\r\n\r\n    const north = document.querySelector(\r\n      `[data-row=\"${row - 1}\"][data-column=\"${column}\"]`\r\n    );\r\n\r\n    const south = document.querySelector(\r\n      `[data-row=\"${row + 1}\"][data-column=\"${column}\"]`\r\n    );\r\n\r\n    const east = document.querySelector(\r\n      `[data-row=\"${row}\"][data-column=\"${column + 1}\"]`\r\n    );\r\n\r\n    const west = document.querySelector(\r\n      `[data-row=\"${row}\"][data-column=\"${column - 1}\"]`\r\n    );\r\n\r\n    if (north && north.classList.contains(\"player\")) return true;\r\n    if (south && south.classList.contains(\"player\")) return true;\r\n    if (east && east.classList.contains(\"player\")) return true;\r\n    if (west && west.classList.contains(\"player\")) return true;\r\n  };\r\n\r\n  retaliation = () => {\r\n    const attacker = this.currentPlayer;\r\n    this.currentPlayer = attacker.id === 1 ? this.players[1] : this.players[0];\r\n    const opponent = this.currentPlayer;\r\n\r\n    document\r\n      .querySelector(`#panel-p${attacker.id}`)\r\n      .classList.remove(\"current\");\r\n    document.querySelector(`#panel-p${opponent.id}`).classList.add(\"current\");\r\n\r\n    // 1. Display modal window with attack information\r\n    const fightModal = document.querySelector(\"#fight-modal\");\r\n    document.querySelector(\"#avatar\").innerHTML = opponent.avatar;\r\n\r\n    setTimeout(() => {\r\n      fightModal.classList.add(\"open\");\r\n    }, 500);\r\n\r\n    const attack = () => {\r\n      document.querySelector(\"#protect\").removeEventListener(\"click\", protect);\r\n      document.querySelector(\"#run\").removeEventListener(\"click\", run);\r\n\r\n      fightModal.classList.remove(\"open\");\r\n\r\n      const health = opponent.health - attacker.weapon.damage;\r\n      document.querySelector(`#health-p${opponent.id}`).innerHTML = health;\r\n      this.players[opponent.id - 1].health = health;\r\n      const protection = document.querySelector(`#protection-p${opponent.id}`);\r\n      protection.innerHTML = \"UNPROTECTED\";\r\n      protection.classList.remove(\"protecting\");\r\n\r\n      if (this.gameOver(attacker, opponent)) return;\r\n\r\n      this.retaliation();\r\n    };\r\n\r\n    const protect = () => {\r\n      document.querySelector(\"#attack\").removeEventListener(\"click\", attack);\r\n      document.querySelector(\"#run\").removeEventListener(\"click\", run);\r\n\r\n      fightModal.classList.remove(\"open\");\r\n\r\n      const health = opponent.health - attacker.weapon.damage / 2;\r\n      document.querySelector(`#health-p${opponent.id}`).innerHTML = health;\r\n      this.players[opponent.id - 1].health = health;\r\n      const protection = document.querySelector(`#protection-p${opponent.id}`);\r\n      protection.innerHTML = \"PROTECTED\";\r\n      protection.classList.add(\"protecting\");\r\n\r\n      if (this.gameOver(attacker, opponent)) return;\r\n\r\n      this.retaliation();\r\n    };\r\n\r\n    const run = () => {\r\n      document.querySelector(\"#attack\").removeEventListener(\"click\", attack);\r\n      document.querySelector(\"#protect\").removeEventListener(\"click\", protect);\r\n\r\n      fightModal.classList.remove(\"open\");\r\n\r\n      const health = opponent.health - attacker.weapon.damage / 2;\r\n      document.querySelector(`#health-p${opponent.id}`).innerHTML = health;\r\n      this.players[opponent.id - 1].health = health;\r\n      const protection = document.querySelector(`#protection-p${opponent.id}`);\r\n      protection.innerHTML = \"PROTECTED\";\r\n      protection.classList.add(\"protecting\");\r\n\r\n      if (this.gameOver(attacker, opponent)) return;\r\n\r\n      this.showPlayerMoves();\r\n    };\r\n\r\n    document\r\n      .querySelector(\"#protect\")\r\n      .addEventListener(\"click\", protect, { once: true });\r\n\r\n    document\r\n      .querySelector(\"#attack\")\r\n      .addEventListener(\"click\", attack, { once: true });\r\n\r\n    document\r\n      .querySelector(\"#run\")\r\n      .addEventListener(\"click\", run, { once: true });\r\n  };\r\n\r\n  //Game Over Case\r\n\r\n  gameOver = (attacker, opponent) => {\r\n    if (this.players[opponent.id - 1].health <= 0) {\r\n      const gameOverModal = document.querySelector(\"#gameover-modal\");\r\n\r\n      gameOverModal.classList.add(\"open\");\r\n\r\n      document.querySelector(\r\n        \"#gameover-modal p:first-of-type\"\r\n      ).innerHTML = `${attacker.name}, you are the winner! :)`;\r\n\r\n      document.querySelector(\r\n        \"#gameover-modal p:last-of-type\"\r\n      ).innerHTML = `${opponent.name}, you are the loser! :(`;\r\n\r\n      return true;\r\n    }\r\n  };\r\n\r\n  //Highlight Player Moves\r\n\r\n  showPlayerMoves = () => {\r\n    const row = Number(this.currentPlayer.location.row);\r\n    const column = Number(this.currentPlayer.location.column);\r\n\r\n    const playerNorthMoves = (tile) => {\r\n      return document.querySelector(\r\n        `[data-row=\"${row - tile}\"][data-column=\"${column}\"]`\r\n      );\r\n    };\r\n\r\n    const playerEastMoves = (tile) => {\r\n      return document.querySelector(\r\n        `[data-row=\"${row}\"][data-column=\"${column + tile}\"]`\r\n      );\r\n    };\r\n\r\n    const playerSouthMoves = (tile) => {\r\n      return document.querySelector(\r\n        `[data-row=\"${row + tile}\"][data-column=\"${column}\"]`\r\n      );\r\n    };\r\n\r\n    const playerWestMoves = (tile) => {\r\n      return document.querySelector(\r\n        `[data-row=\"${row}\"][data-column=\"${column - tile}\"]`\r\n      );\r\n    };\r\n\r\n    //Highlight possible tiles NORTH(UP)\r\n    for (let i = 1; i <= 3; i++) {\r\n      if (playerNorthMoves(i)) {\r\n        if (\r\n          !playerNorthMoves(i).classList.contains(\"obstacle\") &&\r\n          !playerNorthMoves(i).classList.contains(\"player\")\r\n        ) {\r\n          playerNorthMoves(i).classList.add(\"highlight\");\r\n          playerNorthMoves(i).addEventListener(\"click\", this.movePlayer);\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    //Highlight possible tiles EAST(RIGHT)\r\n    for (let i = 1; i <= 3; i++) {\r\n      if (playerEastMoves(i)) {\r\n        if (\r\n          !playerEastMoves(i).classList.contains(\"obstacle\") &&\r\n          !playerEastMoves(i).classList.contains(\"player\")\r\n        ) {\r\n          playerEastMoves(i).classList.add(\"highlight\");\r\n          playerEastMoves(i).addEventListener(\"click\", this.movePlayer);\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    //Highlight possible tiles SOUTH(DOWN)\r\n    for (let i = 1; i <= 3; i++) {\r\n      if (playerSouthMoves(i)) {\r\n        if (\r\n          !playerSouthMoves(i).classList.contains(\"obstacle\") &&\r\n          !playerSouthMoves(i).classList.contains(\"player\")\r\n        ) {\r\n          playerSouthMoves(i).classList.add(\"highlight\");\r\n          playerSouthMoves(i).addEventListener(\"click\", this.movePlayer);\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    //Highlight possible tiles WEST(LEFT)\r\n    for (let i = 1; i <= 3; i++) {\r\n      if (playerWestMoves(i)) {\r\n        if (\r\n          !playerWestMoves(i).classList.contains(\"obstacle\") &&\r\n          !playerWestMoves(i).classList.contains(\"player\")\r\n        ) {\r\n          playerWestMoves(i).classList.add(\"highlight\");\r\n          playerWestMoves(i).addEventListener(\"click\", this.movePlayer);\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default Game;\r\n","import Player from \"./player\";\r\nimport { player1, player2, weapon3, weapon4 } from \"./assets\";\r\nimport Game from \"./game\";\r\n\r\nGame.createBoard();\r\n\r\nconst newGame = () => {\r\n  const playerOne = new Player(1, \"Rick\", player1, weapon3).generate();\r\n  const playerTwo = new Player(2, \"Lori\", player2, weapon4).generate();\r\n\r\n  Game.createBoard();\r\n\r\n  new Game([playerOne, playerTwo]).new();\r\n};\r\n\r\n//Pop-up Rules Modal Window\r\nconst rulesBtn = document.querySelector(\".rules-btn\");\r\nconst rulesClose = document.querySelector(\"#rules-modal button\");\r\n\r\nrulesBtn.addEventListener(\"click\", () =>\r\n  document.querySelector(\"#rules-modal\").classList.add(\"open\")\r\n);\r\nrulesClose.addEventListener(\"click\", () =>\r\n  document.querySelector(\"#rules-modal\").classList.remove(\"open\")\r\n);\r\n\r\ndocument.querySelector(\".new-game\").addEventListener(\"click\", newGame);\r\ndocument\r\n  .querySelector(\"#gameover-modal button\")\r\n  .addEventListener(\"click\", newGame);\r\n"]}